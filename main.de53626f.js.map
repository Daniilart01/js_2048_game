{"version":3,"sources":["scripts/tile.js","scripts/main.js"],"names":["Tile","gameField","tile","document","createElement","value","Math","floor","random","classList","add","textContent","append","coordinates","getRandomEmptyPosition","x","y","style","setProperty","tilesMatrix","isFieldFull","checkGameEnd","tileToRemove","remove","setTimeout","removeProperty","querySelector","arr","i","TILES_COUNT","j","forEach","row","initTilesMatrix","mergeAvailable","button","gameScore","gameControlsBlock","messageWin","messageLose","messageStart","gameStarted","keydownFunction","e","includes","key","contains","isCellMoved","score","merged","moveTileTo","mergeTiles","push","initNewTile","gameScoreIndicator","buttonClickFunction","clearField","simulateArrowKeyPress","arrowKey","arrowEvent","Event","window","onload","touchStartX","touchStartY","touchEndX","touchEndY","elementToSwipe","body","addEventListener","touches","clientX","clientY","changedTouches","swipeThreshold","swipeDistanceX","swipeDistanceY","abs"],"mappings":"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","file":"main.de53626f.js","sourceRoot":"..\\src","sourcesContent":["export class Tile {\n  constructor(gameField) {\n    this.tile = document.createElement('div');\n    this.value = Math.floor(Math.random() * 10) === 0 ? 4 : 2;\n    this.tile.classList.add('tile');\n    this.tile.classList.add(`field-cell--${this.value}`);\n    this.tile.textContent = this.value;\n    gameField.append(this.tile);\n\n    const coordinates = Tile.getRandomEmptyPosition();\n\n    this.x = coordinates[0];\n    this.y = coordinates[1];\n\n    this.tile.style.setProperty('--index-x', this.x);\n    this.tile.style.setProperty('--index-y', this.y);\n\n    Tile.tilesMatrix[coordinates[1]][coordinates[0]] = this;\n\n    if (Tile.isFieldFull()) {\n      Tile.checkGameEnd();\n    }\n  }\n\n  moveTileTo(x, y) {\n    this.tile.style.setProperty('--index-x', x);\n    this.tile.style.setProperty('--index-y', y);\n\n    Tile.tilesMatrix[y][x] = this;\n    Tile.tilesMatrix[this.y][this.x] = null;\n\n    this.x = x;\n    this.y = y;\n  }\n\n  mergeTiles(tileToRemove) {\n    this.tile.classList.remove(`field-cell--${this.value}`);\n    this.value *= 2;\n    this.tile.classList.add(`field-cell--${this.value}`);\n    this.tile.textContent = this.value;\n\n    Tile.tilesMatrix[tileToRemove.y][tileToRemove.x] = null;\n    this.tile.style.setProperty('z-index', 2);\n    tileToRemove.tile.style.setProperty('--index-x', this.x);\n    tileToRemove.tile.style.setProperty('--index-y', this.y);\n\n    setTimeout(() => {\n      tileToRemove.tile.remove();\n      this.tile.style.removeProperty('z-index', 2);\n    }, 200);\n\n    if (this.value >= 2048) {\n      document.querySelector('.message-win').classList.remove('hidden');\n    }\n\n    return this.value;\n  }\n\n  static initNewTile() {\n    return new Tile(document.querySelector('.game-field'));\n  }\n\n  static initTilesMatrix() {\n    const arr = [];\n\n    for (let i = 0; i < Tile.TILES_COUNT; i++) {\n      arr[i] = [];\n\n      for (let j = 0; j < Tile.TILES_COUNT; j++) {\n        arr[i][j] = null;\n      }\n    }\n\n    return arr;\n  }\n\n  static clearField() {\n    Tile.tilesMatrix.forEach((row) => {\n      row.forEach((tile) => {\n        if (tile !== null) {\n          tile.tile.remove();\n        }\n      });\n    });\n\n    Tile.tilesMatrix = Tile.initTilesMatrix();\n  }\n\n  static isFieldFull() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (Tile.tilesMatrix[i][j] === null) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  static getRandomEmptyPosition() {\n    let coordinates;\n\n    do {\n      coordinates = [Math.floor(Math.random() * Tile.TILES_COUNT),\n        Math.floor(Math.random() * Tile.TILES_COUNT)];\n    }\n    while (Tile.tilesMatrix[coordinates[1]][coordinates[0]] !== null);\n\n    return coordinates;\n  }\n\n  static checkGameEnd() {\n    let mergeAvailable = false;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 1; j < 4; j++) {\n        if (Tile.tilesMatrix[i][j - 1].value\n          === Tile.tilesMatrix[i][j].value) {\n          mergeAvailable = true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 2; j >= 0; j--) {\n        if (Tile.tilesMatrix[i][j + 1].value\n          === Tile.tilesMatrix[i][j].value) {\n          mergeAvailable = true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 1; j < 4; j++) {\n        if (Tile.tilesMatrix[j - 1][i].value\n          === Tile.tilesMatrix[j][i].value) {\n          mergeAvailable = true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 2; j >= 0; j--) {\n        if (Tile.tilesMatrix[j + 1][i].value\n          === Tile.tilesMatrix[j][i].value) {\n          mergeAvailable = true;\n        }\n      }\n    }\n\n    if (!mergeAvailable) {\n      document.querySelector('.message-lose').classList.remove('hidden');\n    }\n  }\n}\n\nTile.TILES_COUNT = 4;\nTile.tilesMatrix = Tile.initTilesMatrix();\n","import { Tile } from './tile.js';\n\nconst button = document.querySelector('.button');\nconst gameScore = document.querySelector('.game-score');\nconst gameControlsBlock = document.querySelector('.controls');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\nlet gameStarted = false;\n\nfunction keydownFunction(e) {\n  if (!gameStarted) {\n    return null;\n  }\n\n  if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(e.key)) {\n    if (button.classList.contains('start')) {\n      button.classList.remove('start');\n      button.classList.add('restart');\n      button.textContent = 'Restart';\n\n      messageStart.classList.add('hidden');\n    }\n  }\n\n  let isCellMoved = false;\n\n  let score = 0;\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      for (let i = 0; i < 4; i++) {\n        const merged = [];\n\n        for (let j = 0; j < 4; j++) {\n          if (Tile.tilesMatrix[i][j - 1] === null && Tile.tilesMatrix[i][j]) {\n            Tile.tilesMatrix[i][j].moveTileTo(j - 1, i);\n\n            isCellMoved = true;\n            j = 0;\n            continue;\n          }\n\n          if (Tile.tilesMatrix[i][j - 1] && Tile.tilesMatrix[i][j]) {\n            if (Tile.tilesMatrix[i][j - 1].value\n              === Tile.tilesMatrix[i][j].value\n              && !merged.includes(Tile.tilesMatrix[i][j])\n              && !merged.includes(Tile.tilesMatrix[i][j - 1])) {\n              score += Tile.tilesMatrix[i][j - 1]\n                .mergeTiles(Tile.tilesMatrix[i][j]);\n              isCellMoved = true;\n\n              merged.push(Tile.tilesMatrix[i][j - 1]);\n            }\n          }\n        }\n      }\n\n      if (isCellMoved) {\n        Tile.initNewTile();\n      }\n      break;\n    case 'ArrowRight':\n      for (let i = 0; i < 4; i++) {\n        const merged = [];\n\n        for (let j = 2; j >= 0; j--) {\n          if (Tile.tilesMatrix[i][j + 1] === null && Tile.tilesMatrix[i][j]) {\n            Tile.tilesMatrix[i][j].moveTileTo(j + 1, i);\n\n            isCellMoved = true;\n            j = 4;\n            continue;\n          }\n\n          if (Tile.tilesMatrix[i][j + 1] && Tile.tilesMatrix[i][j]) {\n            if (Tile.tilesMatrix[i][j + 1].value\n              === Tile.tilesMatrix[i][j].value\n              && !merged.includes(Tile.tilesMatrix[i][j])\n              && !merged.includes(Tile.tilesMatrix[i][j + 1])) {\n              score += Tile.tilesMatrix[i][j + 1]\n                .mergeTiles(Tile.tilesMatrix[i][j]);\n              isCellMoved = true;\n\n              merged.push(Tile.tilesMatrix[i][j + 1]);\n            }\n          }\n        }\n      }\n\n      if (isCellMoved) {\n        Tile.initNewTile();\n      }\n      break;\n    case 'ArrowUp':\n      for (let i = 0; i < 4; i++) {\n        const merged = [];\n\n        for (let j = 1; j < 4; j++) {\n          if (Tile.tilesMatrix[j - 1][i] === null && Tile.tilesMatrix[j][i]) {\n            Tile.tilesMatrix[j][i].moveTileTo(i, j - 1);\n\n            isCellMoved = true;\n            j = 0;\n            continue;\n          }\n\n          if (Tile.tilesMatrix[j - 1][i] && Tile.tilesMatrix[j][i]) {\n            if (Tile.tilesMatrix[j - 1][i].value\n              === Tile.tilesMatrix[j][i].value\n              && !merged.includes(Tile.tilesMatrix[j - 1][i])\n              && !merged.includes(Tile.tilesMatrix[j][i])) {\n              score += Tile.tilesMatrix[j - 1][i]\n                .mergeTiles(Tile.tilesMatrix[j][i]);\n              isCellMoved = true;\n\n              merged.push(Tile.tilesMatrix[j - 1][i]);\n            }\n          }\n        }\n      }\n\n      if (isCellMoved) {\n        Tile.initNewTile();\n      }\n      break;\n    case 'ArrowDown':\n      for (let i = 0; i < 4; i++) {\n        const merged = [];\n\n        for (let j = 2; j >= 0; j--) {\n          if (Tile.tilesMatrix[j + 1][i] === null && Tile.tilesMatrix[j][i]) {\n            Tile.tilesMatrix[j][i].moveTileTo(i, j + 1);\n\n            isCellMoved = true;\n            j = 3;\n            continue;\n          }\n\n          if (Tile.tilesMatrix[j + 1][i] && Tile.tilesMatrix[j][i]) {\n            if (Tile.tilesMatrix[j + 1][i].value\n              === Tile.tilesMatrix[j][i].value\n              && !merged.includes(Tile.tilesMatrix[j + 1][i])\n              && !merged.includes(Tile.tilesMatrix[j][i])) {\n              score += Tile.tilesMatrix[j + 1][i]\n                .mergeTiles(Tile.tilesMatrix[j][i]);\n              isCellMoved = true;\n\n              merged.push(Tile.tilesMatrix[j + 1][i]);\n            }\n          }\n        }\n      }\n\n      if (isCellMoved) {\n        Tile.initNewTile();\n      }\n      break;\n  }\n\n  if (score !== 0) {\n    gameScore.textContent = +gameScore.textContent + score;\n\n    const gameScoreIndicator = document.createElement('span');\n\n    gameControlsBlock.append(gameScoreIndicator);\n\n    gameScoreIndicator.textContent = `+${score}`;\n    gameScoreIndicator.classList.add('game-score-add');\n\n    setTimeout(() => {\n      gameScoreIndicator.remove();\n    }, 1000);\n  }\n}\n\nfunction buttonClickFunction() {\n  gameStarted = true;\n  messageStart.classList.add('hidden');\n\n  if (button.classList.contains('restart')) {\n    button.classList.remove('restart');\n    button.classList.add('start');\n    button.textContent = 'Start';\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n  }\n\n  Tile.clearField();\n  gameScore.textContent = '0';\n\n  Tile.initNewTile();\n  Tile.initNewTile();\n}\n\nwindow.onload = () => {\n  let touchStartX, touchStartY;\n  let touchEndX, touchEndY;\n\n  const elementToSwipe = document.body;\n\n  elementToSwipe.addEventListener('touchstart', (e) => {\n    touchStartX = e.touches[0].clientX;\n    touchStartY = e.touches[0].clientY;\n  });\n\n  elementToSwipe.addEventListener('touchend', (e) => {\n    touchEndX = e.changedTouches[0].clientX;\n    touchEndY = e.changedTouches[0].clientY;\n\n    const swipeThreshold = 50;\n\n    const swipeDistanceX = touchStartX - touchEndX;\n    const swipeDistanceY = touchStartY - touchEndY;\n\n    if (Math.abs(swipeDistanceX) > Math.abs(swipeDistanceY)) {\n      if (swipeDistanceX > swipeThreshold) {\n        simulateArrowKeyPress('ArrowLeft');\n      } else if (swipeDistanceX < -swipeThreshold) {\n        simulateArrowKeyPress('ArrowRight');\n      }\n    } else {\n      if (swipeDistanceY > swipeThreshold) {\n        simulateArrowKeyPress('ArrowUp');\n      } else if (swipeDistanceY < -swipeThreshold) {\n        simulateArrowKeyPress('ArrowDown');\n      }\n    }\n  });\n};\n\nfunction simulateArrowKeyPress(arrowKey) {\n  const arrowEvent = new Event('keydown');\n\n  arrowEvent.key = arrowKey;\n  keydownFunction(arrowEvent);\n}\n\nwindow.addEventListener('keydown', keydownFunction);\nbutton.addEventListener('click', buttonClickFunction);\n"]}